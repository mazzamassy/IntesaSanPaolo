/**
 * ArchBridge
 * Wrapper su iframe del client dell'apigw
 * 
 * Angular module: ArchBridge
 * Service: $arch
 * Method: $arch.invoke(serviceName, inputData): AngularPromise
 */
var ARCHBRIDGE = (function () {
  'use strict';

  ////////////////////////
  var SCRIPT_PATH = '/ib/public/vetrina/arch';
  ////////////////////////

  angular.module('ArchBridge', [])
    .factory('$arch', ['$q', '$log', function ($q, $log) {

      // 0: not configured
      // 1: init in progress
      // 2: ready 
      var initState = 0;
      var initPromise;
      var deviceHeaders;

      function init() {
        if (initPromise) {
          return initPromise;
        }
        initPromise = $q(function (resolve) {
          initState = 1;
          $log.info('ArchBridge init...');

          $log.info('deviceHeaders init...');
          var parser = new UAParser();
          var res = parser.getResult();
          deviceHeaders = {
            OperationSystem: res.os.name,
            AccessMode: (res.device.type === 'mobile' && 'Phone') || (res.device.type === 'tablet' && 'Tablet') || 'Web',
            // Device_Model: res.device.vendor ? res.device.vendor + ' ' + res.device.model : 'unknown',
            UserAgent: res.ua,
            CHANNEL: "02"
          };
          $log.info('deviceHeaders ready.');

          window.ARCHBRIDGE.bridgeReady = function () {
            initState = 2;
            delete window.ARCHBRIDGE.bridgeReady;
            $log.info('ArchBridge ready.');
            resolve();
          };

          var iframe = document.createElement('iframe');
          iframe.setAttribute('src', SCRIPT_PATH + '/archbridge.html?v=e7e3dfa');
          iframe.setAttribute('width', 0);
          iframe.setAttribute('height', 0);
          iframe.setAttribute('frameborder', 0);
          iframe.setAttribute('style', 'display: none;');
          document.body.appendChild(iframe);
        });
        return initPromise;
      }

      function invoke(serviceName, inputData, headers, extras) {
        if (initState === 2) {
          return $q(function (resolve, reject) {
            if (typeof headers !== "undefined") {
              if (typeof headers.OperationSystem === "undefined") {
                headers.OperationSystem = deviceHeaders.OperationSystem;
              }
              if (typeof headers.AccessMode === "undefined") {
                headers.AccessMode = deviceHeaders.AccessMode;
              }
              if (typeof headers.UserAgent === "undefined") {
                headers.UserAgent = deviceHeaders.UserAgent;
              }
              if (typeof headers.CHANNEL === "undefined") {
                headers.CHANNEL = deviceHeaders.CHANNEL;
              }
            } else {
              headers = deviceHeaders;
            }

            //Aggiunta header X-REQUEST-ID 
            try {
              var uuidName = window.sessionStorage.getItem("deviceID"); // TODO: da verificare
              var uuidNamespace = uuidv4();
              $log.info("UUID parameters: " + uuidName + " " + uuidNamespace);
              headers["X-REQUEST-ID"] = uuidv5(uuidName, uuidNamespace);
            } catch (e) {
              $log.error("Error creating X-REQUEST-ID header, will be omitted", e);
            }

            window.ARCHBRIDGE.archService(serviceName, inputData, function (response) {
              if (response.exitCode && response.exitCode === 'OK') {
                resolve(response.payload);
              } else {
                reject(response);
              }
            }, headers, extras);
          });
        }
        // auto init
        return init().then(function () {
          return invoke(serviceName, inputData, headers, extras);
        });
      }

      return {
        invoke: invoke
      };
    }]);

  return {
    verbose: window.localStorage.getItem('ArchBridgeConsole') ? true : false
  };
}());
